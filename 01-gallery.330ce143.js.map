{"mappings":"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","sources":["node_modules/@swc/helpers/src/_define_property.mjs","node_modules/simplelightbox/dist/simple-lightbox.esm.js","src/js/gallery-items.js","src/js/01-gallery.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.de\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.11.0\r\n*/\nclass SimpleLightbox {\n\n    defaultOptions = {\n        sourceAttr: 'href',\n        overlay: true,\n        overlayOpacity: 0.7,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5\n    };\n\n    transitionPrefix;\n    isPassiveEventsSupported;\n    transitionCapable = false;\n\n    isTouchDevice = ('ontouchstart' in window);\n    isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    initialLocationHash;\n\n    pushStateSupport = ('pushState' in history);\n\n    isOpen = false;\n    isAnimating = false;\n    isClosing = false;\n    isFadeIn = false;\n    urlChangedOnce = false;\n    hashReseted = false;\n    historyHasChanges = false;\n    historyUpdateTimeout = null;\n\n    currentImage;\n    eventNamespace = 'simplelightbox';\n    domNodes = {};\n\n    loadedImages = [];\n    initialImageIndex = 0;\n    currentImageIndex = 0;\n\n    initialSelector = null;\n    globalScrollbarWidth = 0;\n\n    controlCoordinates = {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n    };\n\n    constructor(elements, options) {\n\n        this.options = Object.assign(this.defaultOptions, options);\n        this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n        if (typeof elements === 'string') {\n            this.initialSelector = elements;\n            this.elements = Array.from(document.querySelectorAll(elements));\n        } else {\n            this.elements = ((typeof elements.length !== 'undefined') && elements.length > 0) ? Array.from(elements) : [elements];\n        }\n\n        this.relatedElements = [];\n\n        this.transitionPrefix = this.calculateTransitionPrefix();\n        this.transitionCapable = this.transitionPrefix !== false;\n        this.initialLocationHash = this.hash;\n\n        // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n        if (this.options.rel) {\n            this.elements = this.getRelated(this.options.rel);\n        }\n\n        if (this.options.uniqueImages) {\n            let imgArr = [];\n            this.elements = Array.from(this.elements).filter(\n                element => {\n                    let src = element.getAttribute(this.options.sourceAttr);\n                    if(imgArr.indexOf(src) === -1) {\n                        imgArr.push(src);\n                        return true;\n                    }\n                    return false;\n                }\n            );\n        }\n\n        this.createDomNodes();\n\n        if (this.options.close) {\n            this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n        }\n\n        if (this.options.nav) {\n            this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n        }\n\n        if (this.options.spinner) {\n            this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n        }\n\n        this.addEventListener(this.elements, 'click.' + this.eventNamespace, (event) => {\n\n            if (this.isValidLink(event.currentTarget)) {\n                event.preventDefault();\n                if (this.isAnimating) {\n                    return false;\n                }\n\n                this.initialImageIndex = this.elements.indexOf(event.currentTarget);\n                this.openImage(event.currentTarget);\n            }\n        });\n\n        // close addEventListener click addEventListener doc\n        if (this.options.docClose) {\n            this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], (event) => {\n                if (this.isOpen && event.target === event.currentTarget) {\n                    this.close();\n                }\n            });\n        }\n\n        // disable rightclick\n        if (this.options.disableRightClick) {\n            this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, (event) => {\n                if (event.target.parentElement.classList.contains(\"sl-image\")) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        // keyboard-control\n        if (this.options.enableKeyboard) {\n            this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle((event) => {\n                this.controlCoordinates.swipeDiff = 0;\n                // keyboard control only if lightbox is open\n\n                if (this.isAnimating && event.key === 'Escape') {\n                    this.currentImage.setAttribute('src', '');\n                    this.isAnimating = false;\n                    return this.close();\n                }\n\n                if (this.isOpen) {\n                    event.preventDefault();\n                    if (event.key === 'Escape') {\n                        this.close();\n                    }\n                    if(!this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n                      this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n                    }\n                }\n            }, this.options.throttleInterval));\n        }\n\n        this.addEvents();\n    }\n\n    checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supportsPassive = false;\n        try {\n            let opts = Object.defineProperty({}, 'passive', {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"testPassive\", null, opts);\n            window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n        return supportsPassive;\n    }\n\n    generateQuerySelector(elem) {\n        const {\n            tagName,\n            id,\n            className,\n            parentNode\n        } = elem;\n\n        if (tagName === 'HTML') return 'HTML';\n\n        let str = tagName;\n\n        str += (id !== '') ? `#${id}` : '';\n\n        if (className) {\n            const classes = className.split(/\\s/);\n            for (let i = 0; i < classes.length; i++) {\n                str += `.${classes[i]}`;\n            }\n        }\n\n        let childIndex = 1;\n\n        for (let e = elem; e.previousElementSibling; e = e.previousElementSibling) {\n            childIndex += 1;\n        }\n\n        str += `:nth-child(${childIndex})`;\n\n        return `${this.generateQuerySelector(parentNode)} > ${str}`;\n    }\n\n    // generateQuerySelector(el) {\n    //     if (el.tagName.toLowerCase() == \"html\")\n    //         return \"HTML\";\n    //     var str = el.tagName;\n    //     str += (el.id != \"\") ? \"#\" + el.id : \"\";\n    //     if (el.className) {\n    //         var classes = el.className.split(/\\s/);\n    //         for (var i = 0; i < classes.length; i++) {\n    //             str += \".\" + classes[i]\n    //         }\n    //     }\n    //     return this.generateQuerySelector(el.parentNode) + \" > \" + str;\n    // }\n\n    createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = this.options.overlayOpacity;\n\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = `<button class=\"sl-prev\">${this.options.navText[0]}</button><button class=\"sl-next\">${this.options.navText[1]}</button>`;\n\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n        if (this.options.captionClass) {\n            let captionClasses = this.options.captionClass.split(/[\\s,]+/);\n            this.domNodes.caption.classList.add(...captionClasses);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex',-1);\n        this.domNodes.wrapper.setAttribute('role','dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden',false);\n        if (this.options.className) {\n            this.domNodes.wrapper.classList.add(this.options.className);\n        }\n        if(this.options.rtl) {\n            this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function () {\n            if (!inThrottle) {\n                func.apply(this, arguments);\n                inThrottle = true;\n                setTimeout(function () {\n                    return inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n\n    isValidLink(element) {\n        return (!this.options.fileExt) || ( element.getAttribute(this.options.sourceAttr) && (new RegExp('(' + this.options.fileExt + ')$', 'i')).test(element.getAttribute(this.options.sourceAttr)));\n    }\n\n    calculateTransitionPrefix() {\n        let s = (document.body || document.documentElement).style;\n\n        return 'transition' in s ? '' :\n            'WebkitTransition' in s ? '-webkit-' :\n                'MozTransition' in s ? '-moz-' :\n                    'OTransition' in s ? '-o' :\n                        false;\n    }\n\n    getScrollbarWidth() {\n        let scrollbarWidth = 0;\n        let scrollDiv = document.createElement('div');\n        scrollDiv.classList.add('sl-scrollbar-measure');\n\n        document.body.appendChild(scrollDiv);\n        scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        return scrollbarWidth;\n    }\n\n    toggleScrollbar(type) {\n        let scrollbarWidth = 0;\n        let fixedElements =  [].slice.call(document.querySelectorAll('.'+this.options.fixedClass))\n        if (type === 'hide') {\n            let fullWindowWidth = window.innerWidth;\n            if (!fullWindowWidth) {\n                let documentElementRect = document.documentElement.getBoundingClientRect();\n                fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n            if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n                let paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n                scrollbarWidth = this.getScrollbarWidth();\n                document.body.dataset.originalPaddingRight = paddingRight;\n                if (scrollbarWidth > 0 || (scrollbarWidth == 0 && this.isAppleDevice)) {\n                    document.body.classList.add('hidden-scroll');\n                    document.body.style.paddingRight = (paddingRight + scrollbarWidth) + 'px';\n\n                    fixedElements.forEach(element => {\n                        const actualPadding = element.style.paddingRight\n                        const calculatedPadding = window.getComputedStyle(element)['padding-right']\n                        element.dataset.originalPaddingRight = actualPadding;\n                        element.style.paddingRight = `${parseFloat(calculatedPadding) + scrollbarWidth}px`\n                    });\n\n                }\n            }\n        } else {\n            document.body.classList.remove('hidden-scroll');\n            document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n\n            fixedElements.forEach(element => {\n                const padding = element.dataset.originalPaddingRight;\n                if (typeof padding !== 'undefined') {\n                    element.style.paddingRight = padding\n                }\n            });\n        }\n        return scrollbarWidth;\n    }\n\n    close() {\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n            return false;\n        }\n\n        this.isClosing = true;\n        let element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n            this.historyHasChanges = false;\n            if(!this.hashReseted) {\n                this.resetHash();\n            }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n\n        this.fadeOut(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeOut(document.querySelectorAll('.sl-image img,  .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, () => {\n            if (this.options.disableScroll) {\n                this.toggleScrollbar('show');\n            }\n\n            if (this.options.htmlClass && this.options.htmlClass !== '') {\n                document.querySelector('html').classList.remove(this.options.htmlClass);\n            }\n\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n            this.domNodes.additionalHtml = null;\n\n            element.dispatchEvent(new Event('closed.simplelightbox'));\n\n            this.isClosing = false;\n        });\n\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false;\n\n        // reset touchcontrol coordinates\n        for (let key in this.controlCoordinates) {\n            this.controlCoordinates[key] = 0;\n        }\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n    }\n\n    get hash() {\n        return window.location.hash.substring(1);\n    }\n\n    preload() {\n        let index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = (index + 1 < 0) ? length - 1 : (index + 1 >= length - 1) ? 0 : index + 1,\n            prev = (index - 1 < 0) ? length - 1 : (index - 1 >= length - 1) ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n\n        nextImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) { //is this condition even required... setting multiple times will not change usage...\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + this.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n\n        prevImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) {\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + this.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n\n    loadImage(direction) {\n        let slideDirection = direction;\n        if(this.options.rtl) {\n            direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n\n        let newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n            return false;\n        }\n\n        this.currentImageIndex = (newIndex < 0) ? this.relatedElements.length - 1 : (newIndex > this.relatedElements.length - 1) ? 0 : newIndex;\n\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n\n        if (this.options.animationSlide) {\n            this.slide(this.options.animationSpeed / 1000, (-100 * slideDirection) - this.controlCoordinates.swipeDiff + 'px');\n        }\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, () => {\n            this.isAnimating = true;\n            if(!this.isClosing) {\n                setTimeout(() => {\n                    let element = this.relatedElements[this.currentImageIndex];\n                    this.currentImage.setAttribute('src', element.getAttribute(this.options.sourceAttr));\n\n                    if (this.loadedImages.indexOf(element.getAttribute(this.options.sourceAttr)) === -1) {\n                        this.show(this.domNodes.spinner);\n                    }\n\n                    if(this.domNodes.image.contains(this.domNodes.caption)) {\n                      this.domNodes.image.removeChild(this.domNodes.caption);\n                    }\n\n                    this.adjustImage(slideDirection);\n                    if (this.options.preloading) this.preload();\n                }, 100);\n            } else {\n                this.isAnimating = false;\n            }\n        });\n    }\n\n    adjustImage(direction) {\n        if (!this.currentImage) {\n            return false;\n        }\n\n        let tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n\n        tmpImage.addEventListener('error', (event) => {\n            this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('error.' + this.eventNamespace));\n            this.isAnimating = false;\n            this.isOpen = true;\n            this.domNodes.spinner.style.display = 'none';\n\n            let dirIsDefined = direction === 1 || direction === -1;\n            if (this.initialImageIndex === this.currentImageIndex && dirIsDefined) {\n                return this.close();\n            }\n\n            if (this.options.alertError) {\n                alert(this.options.alertErrorMessage);\n            }\n\n            this.loadImage(dirIsDefined ? direction : 1);\n        });\n\n\n        tmpImage.addEventListener('load', (event) => {\n            if (typeof direction !== 'undefined') {\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('changed.' + this.eventNamespace));\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + this.eventNamespace));\n            }\n\n            // history\n            if (this.options.history) {\n                this.updateURL();\n            }\n\n            if (this.loadedImages.indexOf(this.currentImage.getAttribute('src')) === -1) {\n                this.loadedImages.push(this.currentImage.getAttribute('src'));\n            }\n\n            let imageWidth = event.target.width,\n                imageHeight = event.target.height;\n\n            if (this.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n                let ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n                imageWidth /= ratio;\n                imageHeight /= ratio;\n            }\n\n            this.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n            this.domNodes.image.style.left = (window.innerWidth - imageWidth - this.globalScrollbarWidth) / 2 + 'px';\n            this.domNodes.image.style.width = imageWidth + 'px';\n            this.domNodes.image.style.height = imageHeight + 'px';\n\n            this.domNodes.spinner.style.display = 'none';\n            if( this.options.focus ) {\n                this.forceFocus();\n            }\n            this.fadeIn(this.currentImage, this.options.fadeSpeed, () => {\n                if( this.options.focus ) {\n                    this.domNodes.wrapper.focus();\n                }\n            });\n\n            this.isOpen = true;\n\n            let captionContainer,\n                captionText;\n\n            if (typeof this.options.captionSelector === 'string') {\n                captionContainer = this.options.captionSelector === 'self'\n                    ? this.relatedElements[this.currentImageIndex]\n                    : document.querySelector(this.generateQuerySelector(this.relatedElements[this.currentImageIndex]) + ' ' + this.options.captionSelector);\n            } else if (typeof this.options.captionSelector === 'function') {\n                captionContainer = this.options.captionSelector(this.relatedElements[this.currentImageIndex]);\n            }\n\n            if(this.options.captions && captionContainer) {\n                if (this.options.captionType === 'data') {\n                    captionText = captionContainer.dataset[this.options.captionsData];\n                } else if (this.options.captionType === 'text') {\n                    captionText = captionContainer.innerHTML;\n                } else {\n                    captionText = captionContainer.getAttribute(this.options.captionsData);\n                }\n            }\n\n            if (!this.options.loop) {\n                if (this.currentImageIndex === 0) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex >= this.relatedElements.length - 1) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n                if (this.currentImageIndex > 0) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex < this.relatedElements.length - 1) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n            } else {\n                if (this.relatedElements.length === 1) {\n                    this.hide(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                } else {\n                    this.show(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                }\n            }\n\n\n            if (direction === 1 || direction === -1) {\n                if (this.options.animationSlide) {\n                    this.slide(0, 100 * direction + 'px');\n                    setTimeout(() => {\n                        this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                    }, 50);\n                }\n                this.fadeIn(this.domNodes.image, this.options.fadeSpeed, () => {\n                    this.isAnimating = false;\n                    this.setCaption(captionText, imageWidth);\n                });\n\n            } else {\n                this.isAnimating = false;\n                this.setCaption(captionText, imageWidth);\n            }\n\n            if (this.options.additionalHtml && !this.domNodes.additionalHtml) {\n                this.domNodes.additionalHtml = document.createElement('div');\n                this.domNodes.additionalHtml.classList.add('sl-additional-html');\n                this.domNodes.additionalHtml.innerHTML = this.options.additionalHtml;\n                this.domNodes.image.appendChild(this.domNodes.additionalHtml);\n            }\n\n        });\n    }\n\n    zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n\n    };\n\n    minMax(value, min, max) {\n        return (value < min) ? min : (value > max) ? max : value;\n    };\n\n    setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n    };\n\n\n    hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n            this.hashReseted = true;\n            this.close();\n        }\n    }\n\n    addEvents() {\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, (event) => {\n            //this.adjustImage.bind(this)\n            if (this.isOpen) {\n                this.adjustImage();\n            }\n        });\n\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n            setTimeout(() => {\n                this.addEventListener(window, 'hashchange.' + this.eventNamespace, (event) => {\n                    if (this.isOpen) {\n                        this.hashchangeHandler();\n                    }\n                });\n            }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, (event) => {\n            if (!event.currentTarget.tagName.match(/button/i)) {\n                return true;\n            }\n\n            event.preventDefault();\n            this.controlCoordinates.swipeDiff = 0;\n            this.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n            let scale = 1\n\n            this.addEventListener(this.domNodes.image, ['mousewheel','DOMMouseScroll'], (event) => {\n                if (this.controlCoordinates.mousedown || this.isAnimating || this.isClosing || !this.isOpen) {\n                    return true;\n                }\n                if(this.controlCoordinates.containerHeight == 0) {\n                    this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                    this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                    this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                    this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                    this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                    this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                event.preventDefault();\n\n                let delta = event.delta || event.wheelDelta;\n                if (delta === undefined) {\n                    //we are on firefox\n                    delta = event.detail;\n                }\n                delta = Math.max(-1,Math.min(1,delta)); // cap the delta to [-1,1] for cross browser consistency\n\n                // apply zoom\n                scale += delta * this.options.scrollZoomFactor * scale;\n                scale = Math.max(1, Math.min( this.options.maxZoom, scale));\n\n                this.controlCoordinates.targetScale = scale;\n\n                let scrollTopPos = document.documentElement.scrollTop || document.body.scrollTop;\n\n                this.controlCoordinates.pinchOffsetX = event.pageX;\n                this.controlCoordinates.pinchOffsetY = event.pageY - scrollTopPos || 0; // need to substract the scroll position\n\n                this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                if (this.controlCoordinates.targetScale > 1) {\n                    this.controlCoordinates.zoomed = true;\n                    if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                        this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                    }\n                } else {\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                }\n\n                this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n\n                this.setZoomData(this.controlCoordinates.targetScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], (event) => {\n            if (event.target.tagName === 'A' && event.type === 'touchstart') {\n                return true;\n            }\n\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n                this.controlCoordinates.initialPointerOffsetX = event.clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                this.controlCoordinates.capture = true;\n            } else {\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    if (!this.controlCoordinates.doubleTapped) {\n                        this.controlCoordinates.doubleTapped = true;\n                        setTimeout(() => {\n                            this.controlCoordinates.doubleTapped = false;\n                        }, 300);\n                    } else {\n\n                        this.currentImage.classList.add('sl-transition');\n                        if (!this.controlCoordinates.zoomed) {\n                            this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n\n\n                            if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n\n                            this.controlCoordinates.zoomed = true;\n                        } else {\n                            this.controlCoordinates.initialScale = 1;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                            this.controlCoordinates.zoomed = false;\n                        }\n\n                        setTimeout(() => {\n                            if (this.currentImage) {\n                                this.currentImage.classList.remove('sl-transition');\n                            }\n                        }, 200);\n                        return false;\n                    }\n\n                    this.controlCoordinates.initialOffsetX  = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                else if (this.controlCoordinates.touchCount === 2) /* Pinch */ {\n                    this.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                    this.controlCoordinates.pinchOffsetX = (this.controlCoordinates.initialPointerOffsetX + this.controlCoordinates.initialPointerOffsetX2) / 2;\n                    this.controlCoordinates.pinchOffsetY = (this.controlCoordinates.initialPointerOffsetY + this.controlCoordinates.initialPointerOffsetY2) / 2;\n                    this.controlCoordinates.initialPinchDistance = Math.sqrt(((this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2) * (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2)) + ((this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2) * (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2)));\n                }\n                this.controlCoordinates.capture = true;\n            }\n            if(this.controlCoordinates.mousedown) return true;\n            if (this.transitionCapable) {\n                this.controlCoordinates.imageLeft = parseInt(this.domNodes.image.style.left, 10);\n            }\n            this.controlCoordinates.mousedown = true;\n            this.controlCoordinates.swipeDiff = 0;\n            this.controlCoordinates.swipeYDiff = 0;\n            this.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n            this.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n\n            return false;\n        });\n\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], (event) => {\n\n\n            if (!this.controlCoordinates.mousedown) {\n                return true;\n            }\n\n            if (event.type === 'touchmove') {\n                if (this.controlCoordinates.capture === false) {\n                    return false;\n                }\n\n                this.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.touchmoveCount++;\n\n                if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.targetPinchDistance = Math.sqrt(((this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2) * (this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2)) + ((this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2) * (this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2)));\n                    if (this.controlCoordinates.initialPinchDistance === null) {\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.initialPinchDistance - this.controlCoordinates.targetPinchDistance) >= 1) {\n                        /* Initialize helpers */\n                        this.controlCoordinates.targetScale = this.minMax(this.controlCoordinates.targetPinchDistance / this.controlCoordinates.initialPinchDistance * this.controlCoordinates.initialScale, 1, this.options.maxZoom);\n                        this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                        this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                        this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                        this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                        this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                        this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                        if (this.controlCoordinates.targetScale > 1) {\n                            this.controlCoordinates.zoomed = true;\n                            if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n                        }\n\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                        this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                    }\n                } else {\n                    this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n                    this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                    this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                    this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                    this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                        this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n                    }\n\n                    this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n                }\n            }\n\n            /* Mouse Move implementation */\n            if (event.type === 'mousemove' && this.controlCoordinates.mousedown) {\n              if(event.type == 'touchmove') return true;\n\n                event.preventDefault();\n\n              if(this.controlCoordinates.capture === false) return false;\n\n              this.controlCoordinates.pointerOffsetX = event.clientX;\n              this.controlCoordinates.pointerOffsetY = event.clientY;\n\n              this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n              this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n              this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n              this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n              this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                  this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                  this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                  this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                  this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n              }\n\n              this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n              this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            }\n\n            if (!this.controlCoordinates.zoomed) {\n\n                this.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n                this.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n                this.controlCoordinates.swipeDiff = this.controlCoordinates.swipeStart - this.controlCoordinates.swipeEnd;\n                this.controlCoordinates.swipeYDiff = this.controlCoordinates.swipeYStart - this.controlCoordinates.swipeYEnd;\n                if (this.options.animationSlide) {\n                    this.slide(0, -this.controlCoordinates.swipeDiff + 'px');\n                }\n            }\n\n        });\n\n\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], (event) => {\n\n\n            if (this.isTouchDevice && event.type === 'touchend') {\n                this.controlCoordinates.touchCount = event.touches.length;\n                if (this.controlCoordinates.touchCount === 0) /* No touch */ {\n                    /* Set attributes */\n                    if (this.currentImage) {\n                        this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    }\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                } else if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                    this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                } else if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.initialPinchDistance = null;\n                }\n            }\n\n\n            if (this.controlCoordinates.mousedown) {\n                this.controlCoordinates.mousedown = false;\n                let possibleDir = true;\n                if (!this.options.loop) {\n                    if (this.currentImageIndex === 0 && this.controlCoordinates.swipeDiff < 0) {\n                        possibleDir = false;\n                    }\n                    if (this.currentImageIndex >= this.relatedElements.length - 1 && this.controlCoordinates.swipeDiff > 0) {\n                        possibleDir = false;\n                    }\n                }\n                if (Math.abs(this.controlCoordinates.swipeDiff) > this.options.swipeTolerance && possibleDir) {\n                    this.loadImage(this.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n                }\n                else if (this.options.animationSlide) {\n                    this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                }\n\n                if (this.options.swipeClose && Math.abs(this.controlCoordinates.swipeYDiff) > 50 && Math.abs(this.controlCoordinates.swipeDiff) < this.options.swipeTolerance) {\n                    this.close();\n                }\n            }\n        });\n\n        this.addEventListener(this.domNodes.image, ['dblclick'], (event) => {\n            if(this.isTouchDevice) return;\n            this.controlCoordinates.initialPointerOffsetX = event.clientX;\n            this.controlCoordinates.initialPointerOffsetY = event.clientY;\n            this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n            this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n            this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n            this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n            this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n            this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n            this.currentImage.classList.add('sl-transition');\n\n            if(!this.controlCoordinates.zoomed) {\n                this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                    this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                }\n                this.controlCoordinates.zoomed = true;\n            } else {\n                this.controlCoordinates.initialScale = 1;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                this.controlCoordinates.zoomed = false;\n                if (this.domNodes.caption.style.display === 'none') {\n                    this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                }\n\n            }\n            setTimeout(() => {\n                if (this.currentImage) {\n                    this.currentImage.classList.remove('sl-transition');\n                    this.currentImage.style[this.transitionPrefix + 'transform-origin'] = null;\n                }\n            }, 200);\n\n            this.controlCoordinates.capture = true;\n            return false;\n        });\n\n    }\n\n    getDimensions(element) {\n        let styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n            height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n            width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n    }\n\n    updateHash() {\n        let newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n            window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n            // what is the browser target of this?\n            if (this.historyHasChanges) {\n                window.location.replace(newURL);\n            } else {\n                window.location.hash = newHash;\n            }\n        }\n        if(!this.historyHasChanges) {\n            this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n    }\n\n    resetHash() {\n        this.hashReseted = true;\n        if(this.urlChangedOnce) {\n            history.back();\n        } else {\n            if (this.pushStateSupport) {\n                history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n                window.location.hash = '';\n            }\n        }\n        //\n        //in case an history operation is still pending\n        clearTimeout(this.historyUpdateTimeout);\n    }\n\n    updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n        if (!this.historyHasChanges) {\n            this.updateHash(); // first time\n        } else {\n            this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n    }\n\n    setCaption(captionText, imageWidth) {\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n            this.hide(this.domNodes.caption);\n            this.domNodes.caption.style.width = imageWidth + 'px';\n            this.domNodes.caption.innerHTML = captionText;\n\n            this.domNodes.image.appendChild(this.domNodes.caption);\n\n            setTimeout(() => {\n                this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n            }, this.options.captionDelay);\n        }\n    }\n\n    slide(speed, pos) {\n        if (!this.transitionCapable) {\n            return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n\n    getRelated(rel) {\n        let elems;\n        if (rel && rel !== false && rel !== 'nofollow') {\n            elems = Array.from(this.elements).filter(element => element.getAttribute('rel') === rel);\n        } else {\n            elems = this.elements;\n        }\n        return elems;\n    }\n\n    openImage(element) {\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        this.globalScrollbarWidth = this.getScrollbarWidth();\n        if (this.options.disableScroll) {\n            this.toggleScrollbar('hide');\n            this.globalScrollbarWidth = 0;\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n            document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n        if (this.options.overlay) {\n            document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n            if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.removeChild(this.domNodes.counter);\n            } else if(this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.appendChild(this.domNodes.counter);\n            }\n        }\n\n        this.isAnimating = true;\n\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n\n        let targetURL = element.getAttribute(this.options.sourceAttr);\n\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n            this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n\n        this.domNodes.image.appendChild(this.currentImage);\n\n\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton], this.options.fadeSpeed);\n\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n\n        this.adjustImage();\n        if (this.options.preloading) {\n            this.preload();\n        }\n\n        setTimeout(() => {\n            element.dispatchEvent(new Event('shown.' + this.eventNamespace));\n        }, this.options.animationSpeed);\n    }\n\n    forceFocus() {\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, event => {\n            if (document !== event.target &&\n                this.domNodes.wrapper !== event.target &&\n                !this.domNodes.wrapper.contains(event.target)) {\n                this.domNodes.wrapper.focus();\n            }\n        });\n    }\n\n    // utility\n    addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        for (let element of elements) {\n            if (!element.namespaces) {\n                element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n            for (let event of events) {\n                let options = opts || false;\n                let needsPassiveFix = ['touchstart', 'touchmove','mousewheel','DOMMouseScroll'].indexOf(event.split('.')[0]) >= 0;\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                    if (typeof options === 'object') {\n                        options.passive = true;\n                    } else {\n                        options = {passive: true};\n                    }\n                }\n\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n            }\n        }\n    }\n\n    removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n        for (let element of elements) {\n            for (let event of events) {\n                if(element.namespaces && element.namespaces[event]) {\n                    element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                    delete element.namespaces[event];\n                }\n            }\n        }\n    }\n\n    fadeOut(elements, duration, callback) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = parseFloat(element) || window.getComputedStyle(element).getPropertyValue(\"opacity\");\n        }\n\n        this.isFadeIn = false;\n\n        let step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if ((currentOpacity -= step) < 0) {\n                    for (let element of elements) {\n                        element.style.display = \"none\";\n                        // element.style.opacity = '';\n                        element.style.opacity = 1;\n                    }\n                    callback && callback.call(this, elements);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    requestAnimationFrame(fade);\n                }\n            };\n\n        fade();\n    }\n\n    fadeIn(elements, duration, callback, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = 0;\n            element.style.display = display || \"block\";\n        }\n\n        this.isFadeIn = true;\n\n        let opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = (16.66666 * opacityTarget) / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if (!((currentOpacity += step) > opacityTarget)) {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    if(!this.isFadeIn) return;\n                    requestAnimationFrame(fade);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = opacityTarget;\n                    }\n                    callback && callback.call(this, elements);\n                }\n            };\n\n        fade();\n    }\n\n    hide(elements) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element.style.display != 'none') {\n                element.dataset.initialDisplay = element.style.display;\n            }\n            element.style.display = 'none';\n        }\n    }\n\n    show(elements, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n    }\n\n    wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n\n    on(events, callback) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            if (!element.fullyNamespacedEvents) {\n                element.fullyNamespacedEvents = {};\n            }\n            for (let event of events) {\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n            }\n        }\n        return this;\n    }\n\n    off(events) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            for (let event of events) {\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                    element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n            }\n        }\n        return this;\n    }\n\n    // api\n\n    open(elem) {\n        elem = elem || this.elements[0];\n        if(typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n            elem = elem.get(0);\n        }\n        this.initialImageIndex = this.elements.indexOf(elem);\n        if(this.initialImageIndex > -1) {\n            this.openImage(elem);\n        }\n    }\n\n    next() {\n        this.loadImage(1);\n    }\n\n    prev() {\n        this.loadImage(-1);\n    }\n\n    // get some useful data\n    getLighboxData() {\n        return {\n            currentImageIndex: this.currentImageIndex,\n            currentImage: this.currentImage,\n            globalScrollbarWidth: this.globalScrollbarWidth\n        };\n    }\n\n    //close is exposed anyways..\n\n    destroy() {\n        //remove all custom event listeners from elements\n        this.off([\n            'close.' + this.eventNamespace,\n            'closed.' + this.eventNamespace,\n            'nextImageLoaded.' + this.eventNamespace,\n            'prevImageLoaded.' + this.eventNamespace,\n            'change.' + this.eventNamespace,\n            'nextDone.' + this.eventNamespace,\n            'prevDone.' + this.eventNamespace,\n            'error.' + this.eventNamespace,\n            'changed.' + this.eventNamespace,\n            'next.' + this.eventNamespace,\n            'prev.' + this.eventNamespace,\n            'show.' + this.eventNamespace,\n            'shown.' + this.eventNamespace\n        ]);\n\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n\n        this.close();\n        if (this.isOpen) {\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n    }\n\n    refresh() {\n        if (!this.initialSelector) {\n            throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        let options = this.options,\n            selector = this.initialSelector;\n\n        this.destroy();\n\n        this.constructor(selector, options);\n\n        return this;\n    }\n}\nexport default SimpleLightbox;\n\nglobal.SimpleLightbox = SimpleLightbox;\n","export const galleryItems = [\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825_1280.jpg',\n    description: 'Hokkaido Flower',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n    description: 'Container Haulage Freight',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n    description: 'Aerial Beach View',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n    description: 'Flower Blooms',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n    description: 'Alpine Mountains',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n    description: 'Mountain Lake Sailing',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n    description: 'Alpine Spring Meadows',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n    description: 'Nature Landscape',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n    description: 'Lighthouse Coast Sea',\n  },\n];\n","import SimpleLightbox from \"simplelightbox/dist/simple-lightbox.esm\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { galleryItems } from './gallery-items';\n// Change code below this line\n\nconsole.log(galleryItems);\n\nconst gallery = document.querySelector(\".gallery\");\n\nfunction makeGallery(selector){\n    let fullList = galleryItems.map(makeItemMarkup);\n    gallery.append(...fullList);   \n}\n\nfunction makeItemMarkup({preview,original,description} = {}){\n    let galleryItem = document.createElement(\"a\");\n    galleryItem.classList.add(\"galley__link\");\n    galleryItem.setAttribute(\"href\",original);\n    galleryItem.insertAdjacentHTML(\"afterbegin\",`<img class=\"gallery__image\" src=\"${preview}\" alt=\"${description}\" />`);\n  return galleryItem;  \n}\n\nfunction createLightbox(){\n    return new SimpleLightbox(\".gallery a\",{\n        captionDelay: 250,\n        captionsData:\"alt\",\n        \n    });\n}\n\nmakeGallery(gallery);\n\ncreateLightbox();\n"],"names":["$bb9a5d09fff8458d$export$2e2bcd8739ae039","obj","key","value","Object","defineProperty","enumerable","configurable","writable","opts","get","supportsPassive","window","addEventListener","removeEventListener","e","elem","tagName","id","className","parentNode","str","classes","split","i","length","childIndex","previousElementSibling","this","generateQuerySelector","domNodes","overlay","document","createElement","classList","add","dataset","opacityTarget","options","overlayOpacity","closeButton","innerHTML","closeText","spinner","navigation","navText","counter","caption","captionPosition","captionClass","captionClasses","image","wrapper","setAttribute","rtl","limit","inThrottle","func","apply","arguments","setTimeout","element","fileExt","getAttribute","sourceAttr","RegExp","test","s","body","documentElement","style","scrollbarWidth","scrollDiv","appendChild","offsetWidth","clientWidth","removeChild","type","slice","call","querySelectorAll","fixedClass","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","isAppleDevice","paddingRight","parseInt","getScrollbarWidth","originalPaddingRight","fixedElements","forEach","actualPadding","calculatedPadding","getComputedStyle","parseFloat","remove","padding","isOpen","isAnimating","isClosing","relatedElements","currentImageIndex","dispatchEvent","Event","history","historyHasChanges","hashReseted","resetHash","eventNamespace","fadeOut","fadeSpeed","disableScroll","toggleScrollbar","htmlClass","querySelector","additionalHtml","currentImage","controlCoordinates","mousedown","zoomed","capture","initialScale","minMax","maxZoom","doubleTapped","hash","location","substring","index","next","prev","nextImage","Image","prevImage","event","src","target","loadedImages","indexOf","push","direction","slideDirection","newIndex","loop","animationSlide","slide","animationSpeed","swipeDiff","show","contains","adjustImage","preloading","preload","tmpImage","windowWidth","widthRatio","windowHeight","innerHeight","heightRatio","scale","translateX","translateY","zoomPanElement","display","dirIsDefined","initialImageIndex","close","alertError","alert","alertErrorMessage","loadImage","updateURL","captionText","imageWidth","width","imageHeight","height","scaleImageToRatio","ratio","top","globalScrollbarWidth","focus","forceFocus","fadeIn","captionSelector","captionContainer","captions","captionType","captionsData","hide","setCaption","targetOffsetX","targetOffsetY","targetScale","transitionPrefix","min","max","setZoomData","hashchangeHandler","initialLocationHash","bind","getElementsByTagName","currentTarget","match","preventDefault","scrollZoom","containerHeight","getDimensions","containerWidth","imgHeight","imgWidth","containerOffsetX","offsetLeft","containerOffsetY","offsetTop","initialOffsetX","initialOffsetY","delta","wheelDelta","undefined","detail","scrollZoomFactor","scrollTopPos","scrollTop","pinchOffsetX","pageX","pinchOffsetY","pageY","limitOffsetX","limitOffsetY","scaleDifference","opacity","initialPinchDistance","targetPinchDistance","initialPointerOffsetX","clientX","initialPointerOffsetY","clientY","touchCount","touches","doubleTapZoom","initialPointerOffsetX2","initialPointerOffsetY2","sqrt","transitionCapable","imageLeft","swipeYDiff","swipeStart","swipeYStart","pointerOffsetX","pointerOffsetY","touchmoveCount","pointerOffsetX2","pointerOffsetY2","swipeEnd","swipeYEnd","possibleDir","swipeTolerance","swipeClose","isTouchDevice","styles","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","paddingLeft","newURL","href","newHash","pushStateSupport","title","replace","urlChangedOnce","back","pushState","pathname","search","historyUpdateTimeout","clearTimeout","updateHash","captionDelay","speed","pos","getRelated","rel","elems","Array","from","elements","filter","showCounter","targetURL","events","callback","wrap","namespaces","isPassiveEventsSupported","passive","duration","getPropertyValue","fade","currentOpacity","step","element1","requestAnimationFrame","isFadeIn","initialDisplay","input","Symbol","iterator","fullyNamespacedEvents","open","jQuery","openImage","off","initialSelector","selector","destroy","constructor","nav","enableKeyboard","docClose","disableRightClick","throttleInterval","uniqueImages","navigator","platform","assign","defaultOptions","checkPassiveEventsSupport","calculateTransitionPrefix","imgArr","createDomNodes","isValidLink","parentElement","throttle","$7b225180b5019822$export$f795133be3c5eb8c","preview","original","description","console","log","$97d4a16aabe2244a$var$gallery","$97d4a16aabe2244a$var$makeItemMarkup","galleryItem","insertAdjacentHTML","fullList","map","append","$97d4a16aabe2244a$var$makeGallery","$945867cc3302d81d$export$2e2bcd8739ae039"],"version":3,"file":"01-gallery.330ce143.js.map"}